[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "wagtail.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "RichTextField",
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "isExtraImport": true,
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "RichTextField",
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "isExtraImport": true,
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "RichTextField",
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "isExtraImport": true,
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "RichTextField",
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "isExtraImport": true,
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "StreamField",
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "isExtraImport": true,
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "RichTextField",
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "isExtraImport": true,
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "StreamField",
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "isExtraImport": true,
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "StreamField",
        "importPath": "wagtail.fields",
        "description": "wagtail.fields",
        "isExtraImport": true,
        "detail": "wagtail.fields",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "apps",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "DraftStateMixin",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "PreviewableMixin",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "RevisionMixin",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "TranslatableMixin",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "Site",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "GroupPagePermission",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "PageViewRestriction",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "wagtail.models",
        "description": "wagtail.models",
        "isExtraImport": true,
        "detail": "wagtail.models",
        "documentation": {}
    },
    {
        "label": "FieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "MultiFieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "FieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "FieldRowPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "InlinePanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "MultiFieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "PublishingPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "FieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "MultiFieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "FieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "MultiFieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "FieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "MultiFieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "InlinePanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "PageChooserPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "HelpPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "FieldPanel",
        "importPath": "wagtail.admin.panels",
        "description": "wagtail.admin.panels",
        "isExtraImport": true,
        "detail": "wagtail.admin.panels",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "modelcluster.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "modelcluster.fields",
        "description": "modelcluster.fields",
        "detail": "modelcluster.fields",
        "documentation": {}
    },
    {
        "label": "ParentalKey",
        "importPath": "modelcluster.fields",
        "description": "modelcluster.fields",
        "isExtraImport": true,
        "detail": "modelcluster.fields",
        "documentation": {}
    },
    {
        "label": "ParentalManyToManyField",
        "importPath": "modelcluster.fields",
        "description": "modelcluster.fields",
        "isExtraImport": true,
        "detail": "modelcluster.fields",
        "documentation": {}
    },
    {
        "label": "wagtail.contrib.forms.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "wagtail.contrib.forms.models",
        "description": "wagtail.contrib.forms.models",
        "detail": "wagtail.contrib.forms.models",
        "documentation": {}
    },
    {
        "label": "AbstractEmailForm",
        "importPath": "wagtail.contrib.forms.models",
        "description": "wagtail.contrib.forms.models",
        "isExtraImport": true,
        "detail": "wagtail.contrib.forms.models",
        "documentation": {}
    },
    {
        "label": "AbstractFormField",
        "importPath": "wagtail.contrib.forms.models",
        "description": "wagtail.contrib.forms.models",
        "isExtraImport": true,
        "detail": "wagtail.contrib.forms.models",
        "documentation": {}
    },
    {
        "label": "FormSubmissionsPanel",
        "importPath": "wagtail.contrib.forms.panels",
        "description": "wagtail.contrib.forms.panels",
        "isExtraImport": true,
        "detail": "wagtail.contrib.forms.panels",
        "documentation": {}
    },
    {
        "label": "BaseGenericSetting",
        "importPath": "wagtail.contrib.settings.models",
        "description": "wagtail.contrib.settings.models",
        "isExtraImport": true,
        "detail": "wagtail.contrib.settings.models",
        "documentation": {}
    },
    {
        "label": "register_setting",
        "importPath": "wagtail.contrib.settings.models",
        "description": "wagtail.contrib.settings.models",
        "isExtraImport": true,
        "detail": "wagtail.contrib.settings.models",
        "documentation": {}
    },
    {
        "label": "register_snippet",
        "importPath": "wagtail.snippets.models",
        "description": "wagtail.snippets.models",
        "isExtraImport": true,
        "detail": "wagtail.snippets.models",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "FooterText",
        "importPath": "base.models",
        "description": "base.models",
        "isExtraImport": true,
        "detail": "base.models",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "urls",
        "importPath": "wagtail.admin",
        "description": "wagtail.admin",
        "isExtraImport": true,
        "detail": "wagtail.admin",
        "documentation": {}
    },
    {
        "label": "urls",
        "importPath": "wagtail",
        "description": "wagtail",
        "isExtraImport": true,
        "detail": "wagtail",
        "documentation": {}
    },
    {
        "label": "blocks",
        "importPath": "wagtail",
        "description": "wagtail",
        "isExtraImport": true,
        "detail": "wagtail",
        "documentation": {}
    },
    {
        "label": "urls",
        "importPath": "wagtail.documents",
        "description": "wagtail.documents",
        "isExtraImport": true,
        "detail": "wagtail.documents",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "search",
        "description": "search",
        "isExtraImport": true,
        "detail": "search",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "wagtail.blocks",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "wagtail.blocks",
        "description": "wagtail.blocks",
        "detail": "wagtail.blocks",
        "documentation": {}
    },
    {
        "label": "PageChooserBlock",
        "importPath": "wagtail.blocks",
        "description": "wagtail.blocks",
        "isExtraImport": true,
        "detail": "wagtail.blocks",
        "documentation": {}
    },
    {
        "label": "wagtail.images.blocks",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "wagtail.images.blocks",
        "description": "wagtail.images.blocks",
        "detail": "wagtail.images.blocks",
        "documentation": {}
    },
    {
        "label": "ImageChooserBlock",
        "importPath": "wagtail.images.blocks",
        "description": "wagtail.images.blocks",
        "isExtraImport": true,
        "detail": "wagtail.images.blocks",
        "documentation": {}
    },
    {
        "label": "ImageChooserBlock",
        "importPath": "wagtail.images.blocks",
        "description": "wagtail.images.blocks",
        "isExtraImport": true,
        "detail": "wagtail.images.blocks",
        "documentation": {}
    },
    {
        "label": "ClusterTaggableManager",
        "importPath": "modelcluster.contrib.taggit",
        "description": "modelcluster.contrib.taggit",
        "isExtraImport": true,
        "detail": "modelcluster.contrib.taggit",
        "documentation": {}
    },
    {
        "label": "EmptyPage",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "PageNotAnInteger",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "TemplateResponse",
        "importPath": "django.template.response",
        "description": "django.template.response",
        "isExtraImport": true,
        "detail": "django.template.response",
        "documentation": {}
    },
    {
        "label": "call_command",
        "importPath": "django.core.management",
        "description": "django.core.management",
        "isExtraImport": true,
        "detail": "django.core.management",
        "documentation": {}
    },
    {
        "label": "CommandError",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "about_us.migrations.0001_initial",
        "description": "about_us.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),\n        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='abouta_usPage',\n            fields=[",
        "detail": "about_us.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AboutUsConfig",
        "kind": 6,
        "importPath": "about_us.apps",
        "description": "about_us.apps",
        "peekOfCode": "class AboutUsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'about_us'",
        "detail": "about_us.apps",
        "documentation": {}
    },
    {
        "label": "abouta_usPage",
        "kind": 6,
        "importPath": "about_us.models",
        "description": "about_us.models",
        "peekOfCode": "class abouta_usPage(Page):\n    body = RichTextField(blank=True)\n    template = 'about_us/about_us.html'\n    content_panels = Page.content_panels + [\n        FieldPanel('body'),\n    ]\n    def get_context(self, request):\n        \"\"\"\n        A method to retrieve the context with respect to the given request.\n        Parameters:",
        "detail": "about_us.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact.migrations.0001_initial",
        "description": "contact.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='FormPage',\n            fields=[\n                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),",
        "detail": "contact.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ContactConfig",
        "kind": 6,
        "importPath": "contact.apps",
        "description": "contact.apps",
        "peekOfCode": "class ContactConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contact'",
        "detail": "contact.apps",
        "documentation": {}
    },
    {
        "label": "FormField",
        "kind": 6,
        "importPath": "contact.models",
        "description": "contact.models",
        "peekOfCode": "class FormField(AbstractFormField):\n    page = ParentalKey('FormPage', on_delete=models.CASCADE, related_name='form_fields')\nclass FormPage(AbstractEmailForm):\n    intro = RichTextField(blank=True)\n    thank_you_text = RichTextField(blank=True)\n    content_panels = AbstractEmailForm.content_panels + [\n        FormSubmissionsPanel(),\n        FieldPanel('intro'),\n        InlinePanel('form_fields', label=\"Form fields\"),\n        FieldPanel('thank_you_text'),",
        "detail": "contact.models",
        "documentation": {}
    },
    {
        "label": "FormPage",
        "kind": 6,
        "importPath": "contact.models",
        "description": "contact.models",
        "peekOfCode": "class FormPage(AbstractEmailForm):\n    intro = RichTextField(blank=True)\n    thank_you_text = RichTextField(blank=True)\n    content_panels = AbstractEmailForm.content_panels + [\n        FormSubmissionsPanel(),\n        FieldPanel('intro'),\n        InlinePanel('form_fields', label=\"Form fields\"),\n        FieldPanel('thank_you_text'),\n        MultiFieldPanel([\n            FieldRowPanel([",
        "detail": "contact.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "env.Scripts.jp",
        "description": "env.Scripts.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": "env.Scripts.jp",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0001_initial",
        "description": "home.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),\n        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='HomePage',\n            fields=[",
        "detail": "home.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "HomePage",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class HomePage(Page):\n    # add the Hero section of HomePage:\n    image = models.ForeignKey(\n        \"wagtailimages.Image\",\n        null=True,\n        blank=True,\n        on_delete=models.SET_NULL,\n        related_name=\"+\",\n        help_text=\"Homepage image\",\n    )",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "PROJECT_DIR",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nBASE_DIR = os.path.dirname(PROJECT_DIR)\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# Application definition\nINSTALLED_APPS = [\n    \"home\",\n    \"search\",\n    \"wagtail.contrib.forms\",\n    \"wagtail.contrib.redirects\",",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "BASE_DIR = os.path.dirname(PROJECT_DIR)\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# Application definition\nINSTALLED_APPS = [\n    \"home\",\n    \"search\",\n    \"wagtail.contrib.forms\",\n    \"wagtail.contrib.redirects\",\n    \"wagtail.embeds\",",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "INSTALLED_APPS = [\n    \"home\",\n    \"search\",\n    \"wagtail.contrib.forms\",\n    \"wagtail.contrib.redirects\",\n    \"wagtail.embeds\",\n    \"wagtail.sites\",\n    \"wagtail.users\",\n    \"wagtail.snippets\",\n    \"wagtail.documents\",",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"wagtail.contrib.redirects.middleware.RedirectMiddleware\",\n]",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "ROOT_URLCONF = \"indam.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [\n            os.path.join(PROJECT_DIR, \"templates\"),\n        ],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [\n            os.path.join(PROJECT_DIR, \"templates\"),\n        ],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "WSGI_APPLICATION = \"indam.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\n# Password validation",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "LANGUAGE_CODE = \"es-es\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATICFILES_FINDERS = [\n    \"django.contrib.staticfiles.finders.FileSystemFinder\",\n    \"django.contrib.staticfiles.finders.AppDirectoriesFinder\",\n]",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATICFILES_FINDERS = [\n    \"django.contrib.staticfiles.finders.FileSystemFinder\",\n    \"django.contrib.staticfiles.finders.AppDirectoriesFinder\",\n]\nSTATICFILES_DIRS = [",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATICFILES_FINDERS = [\n    \"django.contrib.staticfiles.finders.FileSystemFinder\",\n    \"django.contrib.staticfiles.finders.AppDirectoriesFinder\",\n]\nSTATICFILES_DIRS = [\n    os.path.join(PROJECT_DIR, \"static\"),",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATICFILES_FINDERS = [\n    \"django.contrib.staticfiles.finders.FileSystemFinder\",\n    \"django.contrib.staticfiles.finders.AppDirectoriesFinder\",\n]\nSTATICFILES_DIRS = [\n    os.path.join(PROJECT_DIR, \"static\"),\n]",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "STATICFILES_FINDERS",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "STATICFILES_FINDERS = [\n    \"django.contrib.staticfiles.finders.FileSystemFinder\",\n    \"django.contrib.staticfiles.finders.AppDirectoriesFinder\",\n]\nSTATICFILES_DIRS = [\n    os.path.join(PROJECT_DIR, \"static\"),\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(PROJECT_DIR, \"static\"),\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default storage settings, with the staticfiles storage updated.\n# See https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-STORAGES\nSTORAGES = {",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"static\")\nSTATIC_URL = \"/static/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default storage settings, with the staticfiles storage updated.\n# See https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-STORAGES\nSTORAGES = {\n    \"default\": {\n        \"BACKEND\": \"django.core.files.storage.FileSystemStorage\",\n    },",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "STATIC_URL = \"/static/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default storage settings, with the staticfiles storage updated.\n# See https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-STORAGES\nSTORAGES = {\n    \"default\": {\n        \"BACKEND\": \"django.core.files.storage.FileSystemStorage\",\n    },\n    # ManifestStaticFilesStorage is recommended in production, to prevent",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default storage settings, with the staticfiles storage updated.\n# See https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-STORAGES\nSTORAGES = {\n    \"default\": {\n        \"BACKEND\": \"django.core.files.storage.FileSystemStorage\",\n    },\n    # ManifestStaticFilesStorage is recommended in production, to prevent\n    # outdated JavaScript / CSS assets being served from cache",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "MEDIA_URL = \"/media/\"\n# Default storage settings, with the staticfiles storage updated.\n# See https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-STORAGES\nSTORAGES = {\n    \"default\": {\n        \"BACKEND\": \"django.core.files.storage.FileSystemStorage\",\n    },\n    # ManifestStaticFilesStorage is recommended in production, to prevent\n    # outdated JavaScript / CSS assets being served from cache\n    # (e.g. after a Wagtail upgrade).",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "STORAGES",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "STORAGES = {\n    \"default\": {\n        \"BACKEND\": \"django.core.files.storage.FileSystemStorage\",\n    },\n    # ManifestStaticFilesStorage is recommended in production, to prevent\n    # outdated JavaScript / CSS assets being served from cache\n    # (e.g. after a Wagtail upgrade).\n    # See https://docs.djangoproject.com/en/5.0/ref/contrib/staticfiles/#manifeststaticfilesstorage\n    \"staticfiles\": {\n        \"BACKEND\": \"django.contrib.staticfiles.storage.ManifestStaticFilesStorage\",",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "WAGTAIL_SITE_NAME",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "WAGTAIL_SITE_NAME = \"indam\"\n# Search\n# https://docs.wagtail.org/en/stable/topics/search/backends.html\nWAGTAILSEARCH_BACKENDS = {\n    \"default\": {\n        \"BACKEND\": \"wagtail.search.backends.database\",\n    }\n}\n# Base URL to use when referring to full URLs within the Wagtail admin backend -\n# e.g. in notification emails. Don't include '/admin' or a trailing slash",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "WAGTAILSEARCH_BACKENDS",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "WAGTAILSEARCH_BACKENDS = {\n    \"default\": {\n        \"BACKEND\": \"wagtail.search.backends.database\",\n    }\n}\n# Base URL to use when referring to full URLs within the Wagtail admin backend -\n# e.g. in notification emails. Don't include '/admin' or a trailing slash\nWAGTAILADMIN_BASE_URL = \"http://example.com\"\nBAKERY_MULTISITE = True\nBUILD_DIR = '/tmp/build/'",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "WAGTAILADMIN_BASE_URL",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "WAGTAILADMIN_BASE_URL = \"http://example.com\"\nBAKERY_MULTISITE = True\nBUILD_DIR = '/tmp/build/'\nBAKERY_VIEWS = (\n\t'wagtailbakery.views.AllPublishedPagesView',\n    'wagtailbakery.views.AllPagesView',\n    'wagtailbakery.api_views.PagesAPIDetailView',\n\t'wagtailbakery.api_views.PagesAPIListingView',\n\t'wagtailbakery.api_views.TypedPagesAPIListingView',\n)",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "BAKERY_MULTISITE",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "BAKERY_MULTISITE = True\nBUILD_DIR = '/tmp/build/'\nBAKERY_VIEWS = (\n\t'wagtailbakery.views.AllPublishedPagesView',\n    'wagtailbakery.views.AllPagesView',\n    'wagtailbakery.api_views.PagesAPIDetailView',\n\t'wagtailbakery.api_views.PagesAPIListingView',\n\t'wagtailbakery.api_views.TypedPagesAPIListingView',\n)",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "BUILD_DIR",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "BUILD_DIR = '/tmp/build/'\nBAKERY_VIEWS = (\n\t'wagtailbakery.views.AllPublishedPagesView',\n    'wagtailbakery.views.AllPagesView',\n    'wagtailbakery.api_views.PagesAPIDetailView',\n\t'wagtailbakery.api_views.PagesAPIListingView',\n\t'wagtailbakery.api_views.TypedPagesAPIListingView',\n)",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "BAKERY_VIEWS",
        "kind": 5,
        "importPath": "indam.settings.base",
        "description": "indam.settings.base",
        "peekOfCode": "BAKERY_VIEWS = (\n\t'wagtailbakery.views.AllPublishedPagesView',\n    'wagtailbakery.views.AllPagesView',\n    'wagtailbakery.api_views.PagesAPIDetailView',\n\t'wagtailbakery.api_views.PagesAPIListingView',\n\t'wagtailbakery.api_views.TypedPagesAPIListingView',\n)",
        "detail": "indam.settings.base",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "indam.settings.dev",
        "description": "indam.settings.dev",
        "peekOfCode": "DEBUG = True\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-c3ijgyz%2uu$bdzsirr2pw$@r$r&jp(ma5c-@j6vqyhp)v+t@j\"\n# SECURITY WARNING: define the correct hosts in production!\nALLOWED_HOSTS = [\"*\"]\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\"\ntry:\n    from .local import *\nexcept ImportError:\n    pass",
        "detail": "indam.settings.dev",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "indam.settings.dev",
        "description": "indam.settings.dev",
        "peekOfCode": "SECRET_KEY = \"django-insecure-c3ijgyz%2uu$bdzsirr2pw$@r$r&jp(ma5c-@j6vqyhp)v+t@j\"\n# SECURITY WARNING: define the correct hosts in production!\nALLOWED_HOSTS = [\"*\"]\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\"\ntry:\n    from .local import *\nexcept ImportError:\n    pass",
        "detail": "indam.settings.dev",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "indam.settings.dev",
        "description": "indam.settings.dev",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\nEMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\"\ntry:\n    from .local import *\nexcept ImportError:\n    pass",
        "detail": "indam.settings.dev",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "indam.settings.dev",
        "description": "indam.settings.dev",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\"\ntry:\n    from .local import *\nexcept ImportError:\n    pass",
        "detail": "indam.settings.dev",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "indam.settings.production",
        "description": "indam.settings.production",
        "peekOfCode": "DEBUG = False\ntry:\n    from .local import *\nexcept ImportError:\n    pass",
        "detail": "indam.settings.production",
        "documentation": {}
    },
    {
        "label": "get_site_root",
        "kind": 2,
        "importPath": "indam.templates.components.base.templatetags.navigation_tags",
        "description": "indam.templates.components.base.templatetags.navigation_tags",
        "peekOfCode": "def get_site_root(context):\n    return Site.find_for_request(context[\"request\"]).root_page",
        "detail": "indam.templates.components.base.templatetags.navigation_tags",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "indam.templates.components.base.templatetags.navigation_tags",
        "description": "indam.templates.components.base.templatetags.navigation_tags",
        "peekOfCode": "register = template.Library()\n# ... keep the definition of get_footer_text and add the get_site_root template tag:\n@register.simple_tag(takes_context=True)\ndef get_site_root(context):\n    return Site.find_for_request(context[\"request\"]).root_page",
        "detail": "indam.templates.components.base.templatetags.navigation_tags",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "indam.urls",
        "description": "indam.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"django-admin/\", admin.site.urls),\n    path(\"admin/\", include(wagtailadmin_urls)),\n    path(\"documents/\", include(wagtaildocs_urls)),\n    path(\"search/\", search_views.search, name=\"search\"),\n    # home\n]\nif settings.DEBUG:\n    from django.conf.urls.static import static\n    from django.contrib.staticfiles.urls import staticfiles_urlpatterns",
        "detail": "indam.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "indam.urls",
        "description": "indam.urls",
        "peekOfCode": "urlpatterns = urlpatterns + [\n    # For anything not caught by a more specific rule above, hand over to\n    # Wagtail's page serving mechanism. This should be the last pattern in\n    # the list:\n    path(\"\", include(wagtail_urls)),\n    # Alternatively, if you want Wagtail pages to be served from a subpath\n    # of your site, rather than the site root:\n    #    path(\"pages/\", include(wagtail_urls)),\n]",
        "detail": "indam.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "indam.wsgi",
        "description": "indam.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "indam.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inicio.migrations.0001_initial",
        "description": "inicio.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),\n        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='inicioPage',\n            fields=[",
        "detail": "inicio.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inicio.migrations.0002_remove_iniciopage_body_and_more",
        "description": "inicio.migrations.0002_remove_iniciopage_body_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inicio', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='iniciopage',\n            name='body',\n        ),\n        migrations.RemoveField(",
        "detail": "inicio.migrations.0002_remove_iniciopage_body_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inicio.migrations.0003_remove_iniciopage_services_iniciopage_servicios",
        "description": "inicio.migrations.0003_remove_iniciopage_services_iniciopage_servicios",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inicio', '0002_remove_iniciopage_body_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='iniciopage',\n            name='services',\n        ),\n        migrations.AddField(",
        "detail": "inicio.migrations.0003_remove_iniciopage_services_iniciopage_servicios",
        "documentation": {}
    },
    {
        "label": "InicioConfig",
        "kind": 6,
        "importPath": "inicio.apps",
        "description": "inicio.apps",
        "peekOfCode": "class InicioConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'inicio'",
        "detail": "inicio.apps",
        "documentation": {}
    },
    {
        "label": "inicioPage",
        "kind": 6,
        "importPath": "inicio.models",
        "description": "inicio.models",
        "peekOfCode": "class inicioPage(Page):\n    carouselImages =     StreamField([('carouselImage', ImageChooserBlock())], blank=True, use_json_field=True)\n    servicios = StreamField([('servicio', PageChooserBlock(target_model='servicio.servicio'))], blank=True, use_json_field=True)\n    content_panels = Page.content_panels + [\n        MultiFieldPanel([\n            FieldPanel('carouselImages'),\n        ], heading=\"Carousel\"),\n        MultiFieldPanel([\n            FieldPanel('servicios'),\n        ], heading=\"Services\"),",
        "detail": "inicio.models",
        "documentation": {}
    },
    {
        "label": "search",
        "kind": 2,
        "importPath": "search.views",
        "description": "search.views",
        "peekOfCode": "def search(request):\n    search_query = request.GET.get(\"query\", None)\n    page = request.GET.get(\"page\", 1)\n    # Search\n    if search_query:\n        search_results = Page.objects.live().search(search_query)\n        # To log this query for use with the \"Promoted search results\" module:\n        # query = Query.get(search_query)\n        # query.add_hit()\n    else:",
        "detail": "search.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "servicio.migrations.0001_initial",
        "description": "servicio.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Card',\n            fields=[\n                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),",
        "detail": "servicio.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ServicioConfig",
        "kind": 6,
        "importPath": "servicio.apps",
        "description": "servicio.apps",
        "peekOfCode": "class ServicioConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'servicio'",
        "detail": "servicio.apps",
        "documentation": {}
    },
    {
        "label": "Card",
        "kind": 6,
        "importPath": "servicio.models",
        "description": "servicio.models",
        "peekOfCode": "class Card(Pg):\n    tittle=models.CharField(max_length=100)\n    body=RichTextField(\n    )\n    template='cards/card.html'\n    panels = [\n        FieldPanel('tittle'),\n        FieldPanel('body'),\n    ]\n    def __str__(self):",
        "detail": "servicio.models",
        "documentation": {}
    },
    {
        "label": "subapartados",
        "kind": 6,
        "importPath": "servicio.models",
        "description": "servicio.models",
        "peekOfCode": "class subapartados(Page):\n    tittle = models.CharField(max_length=100)\n    cardlist = StreamField([('card', blocks.PageChooserBlock(target_model='servicio.Card'))], blank=True, use_json_field=True)\n#    template\n    template='servicio/subapartados.html'\n    panels = [\n        FieldPanel('tittle'),\n        FieldPanel('cardlist'),\n    ]\n    def __str__(self):",
        "detail": "servicio.models",
        "documentation": {}
    },
    {
        "label": "servicio",
        "kind": 6,
        "importPath": "servicio.models",
        "description": "servicio.models",
        "peekOfCode": "class servicio(Page):\n    tittle = models.CharField(max_length=100)\n    body=RichTextField()\n    subapartadoslist = StreamField([('subapartados', blocks.PageChooserBlock(target_model='servicio.subapartados'))], blank=True, use_json_field=True)\n    template = 'servicio/servicio.html'\n    content_panels = Page.content_panels + [\n        FieldPanel('tittle'),\n        FieldPanel('body'),\n        FieldPanel('subapartadoslist'),\n    ]",
        "detail": "servicio.models",
        "documentation": {}
    },
    {
        "label": "output_file",
        "kind": 5,
        "importPath": "generate_sql_scripts_001",
        "description": "generate_sql_scripts_001",
        "peekOfCode": "output_file = 'todas_las_migraciones.sql'\n# Borrar el archivo existente si ya existe\nif os.path.exists(output_file):\n    os.remove(output_file)\n# Obtener todas las aplicaciones instaladas en el proyecto\nfrom django.apps import apps\napp_configs = apps.get_app_configs()\n# Iterar sobre cada aplicación y obtener las migraciones\nfor app_config in app_configs:\n    app_name = app_config.name",
        "detail": "generate_sql_scripts_001",
        "documentation": {}
    },
    {
        "label": "app_configs",
        "kind": 5,
        "importPath": "generate_sql_scripts_001",
        "description": "generate_sql_scripts_001",
        "peekOfCode": "app_configs = apps.get_app_configs()\n# Iterar sobre cada aplicación y obtener las migraciones\nfor app_config in app_configs:\n    app_name = app_config.name\n    try:\n        # Obtener las migraciones de la aplicación\n        output = call_command('sqlmigrate', app_name, '0001', stdout=True)\n        # Escribir las migraciones en el archivo SQL\n        with open(output_file, 'a') as f:\n            f.write(output)",
        "detail": "generate_sql_scripts_001",
        "documentation": {}
    }
]